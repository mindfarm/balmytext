{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Modal.svelte","../../src/Difficulty.svelte","../../src/GameBoard.svelte","../../src/Keyboard.svelte","../../node_modules/svelte/store/index.mjs","../../src/Words.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script context=\"module\">\n\tlet onTop   //keeping track of which open modal is on top\n\tconst modals={}  //all modals get registered here for easy future access\n\t\n\t// \treturns an object for the modal specified by `id`, which contains the API functions (`open` and `close` )\n\texport function getModal(id){\n\t\treturn modals[''].open()\n\t}\n</script>\n\n<script>\n\timport {onDestroy} from 'svelte'\n\t\t\n\tlet topDiv\n\tlet visible=false\n\tlet prevOnTop\n\tlet closeCallback\n\t\n\texport let id=''\n\t\n\tfunction keyPress(ev){\n\t\t//only respond if the current modal is the top one\n\t\tif(ev.key==\"Escape\" && onTop==topDiv) close() //ESC\n\t}\n\t\n\t/**  API **/\n\tfunction open(callback){\n\t\tcloseCallback=callback\n\t\tif(visible) return\n\t\tprevOnTop=onTop\n\t\tonTop=topDiv\n\t\twindow.addEventListener(\"keydown\",keyPress)\n\t\t\n\t\t//this prevents scrolling of the main window on larger screens\n\t\tdocument.body.style.overflow=\"hidden\" \n\t\n\t\tvisible=true\n\t\t//Move the modal in the DOM to be the last child of <BODY> so that it can be on top of everything\n\t\tdocument.body.appendChild(topDiv)\n\t}\n\t\t\n\tfunction close(retVal){\n\t\tif(!visible) return\n\t\twindow.removeEventListener(\"keydown\",keyPress)\n\t\tonTop=prevOnTop\n\t\tif(onTop==null) document.body.style.overflow=\"\"\n\t\tvisible=false\n\t\tif(closeCallback) closeCallback(retVal)\n\t}\n\t\t\n\t//expose the API\n\tmodals[id]={open,close}\n\t\t\n\t/*\n\tonDestroy(()=>{\n\t\tdelete modals[id]\n\t\twindow.removeEventListener(\"keydown\",keyPress)\n\t})\n\t */\n\t\t\n</script>\n\n<div id=\"topModal\" class:visible bind:this={topDiv} on:click={()=>close()}>\n\t<div id='modal' on:click|stopPropagation={()=>{}}>\n\t\t<svg id=\"close\" on:click={()=>close()} viewBox=\"0 0 12 12\">\n\t\t\t<circle cx=6 cy=6 r=6 />\n\t\t\t<line x1=3 y1=3 x2=9 y2=9 />\n\t\t\t<line x1=9 y1=3 x2=3 y2=9 />\n\t\t</svg>\n\t\t<div id='modal-content'>\n\t\t\t<slot></slot>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\t#topModal {\n\t\tvisibility: hidden;\n\t\tz-index: 9999;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground: #4448;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\t#modal {\n\t\tposition: relative;\n\t\tborder-radius: 6px;\n\t\tbackground: white;\n    border: 2px solid #000;\n\t\tfilter: drop-shadow(5px 5px 5px #555);\n\t\tpadding: 1em;\n\t}\n\n\t.visible {\n\t\tvisibility: visible !important;\n\t}\n\n\t#close {\n\t\tposition: absolute;\n\t\ttop:-12px;\n\t\tright:-12px;\n\t\twidth:24px;\n\t\theight:24px;\n\t\tcursor: pointer;\n\t\tfill:#F44;\n\t\ttransition: transform 0.3s;\n\t}\t\n\n\t#close:hover {\n\t\ttransform: scale(2);\n\t}\n\n\t#close line {\n\t\tstroke:#FFF;\n\t\tstroke-width:2;\n\t}\n\t#modal-content {\n\t\tmax-width: calc(100vw - 20px);\n\t\tmax-height: calc(100vh - 20px);\n\t\toverflow: auto;\n\t}\n</style>\n","<script>\n  export let howDifficult = (level) => {};\n  function set_difficulty(val){\n    howDifficult(val.target.id)\n  }\n</script>\n<div class=\"switch-toggle switch-3 switch-candy\">\n  <input id=\"reasy\" name=\"state-d\" type=\"radio\" checked=\"\" />\n  <label id=\"easy\" for=\"reasy\" on:click={set_difficulty}>Easy</label>\n\n  <input id=\"rmed\" name=\"state-d\" type=\"radio\" checked=\"checked\" />\n  <label id=\"medium\"for=\"rmed\" on:click={set_difficulty}>Medium</label>\n\n  <input id=\"rhard\" name=\"state-d\" type=\"radio\" />\n  <label id=\"hard\" for=\"rhard\" on:click={set_difficulty}>Hard</label>\n\n  <a></a>\n</div>\n\n<style>\n/*# sourceMappingURL=toggle-switch.css.map */\n.switch-toggle {\n  width: 15em;\n}\n\n.switch-toggle label:not(.disabled) {\n  cursor: pointer;\n}\n@charset \"UTF-8\";\n/*\n* CSS TOGGLE SWITCH\n*\n* Ionuț Colceriu - ghinda.net\n* https://github.com/ghinda/css-toggle-switch\n*\n*/\n/* supported values are px, rem-calc, em-calc\n */\n/* imports\n */\n/* Functions\n */\n/* Shared\n */\n/* Hide by default\n */\n.switch-toggle a, .switch-light span span {\n  display: none; }\n\n/* We can't test for a specific feature,\n * so we only target browsers with support for media queries.\n */\n@media only screen {\n  /* Checkbox\n */\n  .switch-light {\n    position: relative;\n    display: block;\n    /* simulate default browser focus outlines on the switch,\n   * when the inputs are focused.\n   */ }\n    .switch-light::after {\n      clear: both;\n      content: \"\";\n      display: table; }\n    .switch-light *, .switch-light *:before, .switch-light *:after {\n      box-sizing: border-box; }\n    .switch-light a {\n      display: block;\n      -webkit-transition: all 0.2s ease-out;\n      -moz-transition: all 0.2s ease-out;\n      transition: all 0.2s ease-out; }\n    .switch-light label, .switch-light > span {\n      /* breathing room for bootstrap/foundation classes.\n     */\n      line-height: 2em;\n      vertical-align: middle; }\n    .switch-light input:focus ~ span a, .switch-light input:focus + label {\n      outline-width: 2px;\n      outline-style: solid;\n      outline-color: Highlight;\n      /* Chrome/Opera gets its native focus styles.\n     */ }\n      @media (-webkit-min-device-pixel-ratio: 0) {\n        .switch-light input:focus ~ span a, .switch-light input:focus + label {\n          outline-color: -webkit-focus-ring-color;\n          outline-style: auto; } }\n  /* don't hide the input from screen-readers and keyboard access\n */\n  .switch-light input {\n    position: absolute;\n    opacity: 0;\n    z-index: 3; }\n  .switch-light input:checked ~ span a {\n    right: 0%; }\n  /* inherit from label\n */\n  .switch-light strong {\n    font-weight: inherit; }\n  .switch-light > span {\n    position: relative;\n    overflow: hidden;\n    display: block;\n    min-height: 2em;\n    /* overwrite 3rd party classes padding\n   * eg. bootstrap .well\n   */\n    padding: 0;\n    text-align: left; }\n  .switch-light span span {\n    position: relative;\n    z-index: 2;\n    display: block;\n    float: left;\n    width: 50%;\n    text-align: center;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none; }\n  .switch-light a {\n    position: absolute;\n    right: 50%;\n    top: 0;\n    z-index: 1;\n    display: block;\n    width: 50%;\n    height: 100%;\n    padding: 0; }\n  /* Radio Switch\n */\n  .switch-toggle {\n    position: relative;\n    display: block;\n    /* simulate default browser focus outlines on the switch,\n   * when the inputs are focused.\n   */\n    /* For callout panels in foundation\n  */\n    padding: 0 !important;\n    /* 2 items\n   */\n    /* 3 items\n   */\n    /* 4 items\n   */\n    /* 5 items\n   */\n    /* 6 items\n   */ }\n    .switch-toggle::after {\n      clear: both;\n      content: \"\";\n      display: table; }\n    .switch-toggle *, .switch-toggle *:before, .switch-toggle *:after {\n      box-sizing: border-box; }\n    .switch-toggle a {\n      display: block;\n      -webkit-transition: all 0.2s ease-out;\n      -moz-transition: all 0.2s ease-out;\n      transition: all 0.2s ease-out; }\n    .switch-toggle label, .switch-toggle > span {\n      /* breathing room for bootstrap/foundation classes.\n     */\n      line-height: 2em;\n      vertical-align: middle; }\n    .switch-toggle input:focus ~ span a, .switch-toggle input:focus + label {\n      outline-width: 2px;\n      outline-style: solid;\n      outline-color: Highlight;\n      /* Chrome/Opera gets its native focus styles.\n     */ }\n      @media (-webkit-min-device-pixel-ratio: 0) {\n        .switch-toggle input:focus ~ span a, .switch-toggle input:focus + label {\n          outline-color: -webkit-focus-ring-color;\n          outline-style: auto; } }\n    .switch-toggle input {\n      position: absolute;\n      left: 0;\n      opacity: 0; }\n    .switch-toggle input + label {\n      position: relative;\n      z-index: 2;\n      display: block;\n      float: left;\n      padding: 0 0.5em;\n      margin: 0;\n      text-align: center; }\n    .switch-toggle a {\n      position: absolute;\n      top: 0;\n      left: 0;\n      padding: 0;\n      z-index: 1;\n      width: 10px;\n      height: 100%; }\n    .switch-toggle label:nth-child(2):nth-last-child(4), .switch-toggle label:nth-child(2):nth-last-child(4) ~ label, .switch-toggle label:nth-child(2):nth-last-child(4) ~ a {\n      width: 50%; }\n    .switch-toggle label:nth-child(2):nth-last-child(4) ~ input:checked:nth-child(3) + label ~ a {\n      left: 50%; }\n    .switch-toggle label:nth-child(2):nth-last-child(6), .switch-toggle label:nth-child(2):nth-last-child(6) ~ label, .switch-toggle label:nth-child(2):nth-last-child(6) ~ a {\n      width: 33.33%; }\n    .switch-toggle label:nth-child(2):nth-last-child(6) ~ input:checked:nth-child(3) + label ~ a {\n      left: 33.33%; }\n    .switch-toggle label:nth-child(2):nth-last-child(6) ~ input:checked:nth-child(5) + label ~ a {\n      left: 66.66%; }\n    .switch-toggle label:nth-child(2):nth-last-child(8), .switch-toggle label:nth-child(2):nth-last-child(8) ~ label, .switch-toggle label:nth-child(2):nth-last-child(8) ~ a {\n      width: 25%; }\n    .switch-toggle label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(3) + label ~ a {\n      left: 25%; }\n    .switch-toggle label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(5) + label ~ a {\n      left: 50%; }\n    .switch-toggle label:nth-child(2):nth-last-child(8) ~ input:checked:nth-child(7) + label ~ a {\n      left: 75%; }\n    .switch-toggle label:nth-child(2):nth-last-child(10), .switch-toggle label:nth-child(2):nth-last-child(10) ~ label, .switch-toggle label:nth-child(2):nth-last-child(10) ~ a {\n      width: 20%; }\n    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(3) + label ~ a {\n      left: 20%; }\n    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(5) + label ~ a {\n      left: 40%; }\n    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(7) + label ~ a {\n      left: 60%; }\n    .switch-toggle label:nth-child(2):nth-last-child(10) ~ input:checked:nth-child(9) + label ~ a {\n      left: 80%; }\n    .switch-toggle label:nth-child(2):nth-last-child(12), .switch-toggle label:nth-child(2):nth-last-child(12) ~ label, .switch-toggle label:nth-child(2):nth-last-child(12) ~ a {\n      width: 16.6%; }\n    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(3) + label ~ a {\n      left: 16.6%; }\n    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(5) + label ~ a {\n      left: 33.2%; }\n    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(7) + label ~ a {\n      left: 49.8%; }\n    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(9) + label ~ a {\n      left: 66.4%; }\n    .switch-toggle label:nth-child(2):nth-last-child(12) ~ input:checked:nth-child(11) + label ~ a {\n      left: 83%; }\n  /* Candy Theme\n * Based on the \"Sort Switches / Toggles (PSD)\" by Ormal Clarck\n * http://www.premiumpixels.com/freebies/sort-switches-toggles-psd/\n */\n  .switch-toggle.switch-candy, .switch-light.switch-candy > span {\n    background-color: #2d3035;\n    border-radius: 3px;\n    box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.3), 0 1px 0 rgba(255, 255, 255, 0.2); }\n  .switch-light.switch-candy span span, .switch-light.switch-candy input:checked ~ span span:first-child, .switch-toggle.switch-candy label {\n    color: #fff;\n    font-weight: bold;\n    text-align: center;\n    text-shadow: 1px 1px 1px #191b1e; }\n  .switch-light.switch-candy input ~ span span:first-child, .switch-light.switch-candy input:checked ~ span span:nth-child(2), .switch-candy input:checked + label {\n    color: #333;\n    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5); }\n  .switch-candy a {\n    border: 1px solid #333;\n    border-radius: 3px;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), inset 0 1px 1px rgba(255, 255, 255, 0.45);\n    background-color: #70c66b;\n    background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.2), transparent);\n    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), transparent); }\n  .switch-candy-blue a {\n    background-color: #38a3d4; }\n  .switch-candy-yellow a {\n    background-color: #f5e560; }\n  /* iOS Theme\n*/\n  .switch-ios.switch-light span span {\n    color: #888b92; }\n  .switch-ios.switch-light a {\n    left: 0;\n    top: 0;\n    width: 2em;\n    height: 2em;\n    background-color: #fff;\n    border-radius: 100%;\n    border: 0.25em solid #D8D9DB;\n    -webkit-transition: all .2s ease-out;\n    -moz-transition: all .2s ease-out;\n    transition: all .2s ease-out; }\n  .switch-ios.switch-light > span {\n    display: block;\n    width: 100%;\n    height: 2em;\n    background-color: #D8D9DB;\n    border-radius: 1.75em;\n    -webkit-transition: all .4s ease-out;\n    -moz-transition: all .4s ease-out;\n    transition: all .4s ease-out; }\n  .switch-ios.switch-light > span span {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    opacity: 0;\n    line-height: 1.875em;\n    vertical-align: middle;\n    -webkit-transition: all .2s ease-out;\n    -moz-transition: all .2s ease-out;\n    transition: all .2s ease-out; }\n    .switch-ios.switch-light > span span:first-of-type {\n      opacity: 1;\n      padding-left: 1.875em; }\n    .switch-ios.switch-light > span span:last-of-type {\n      padding-right: 1.875em; }\n  .switch-ios.switch-light input:checked ~ span a {\n    left: 100%;\n    border-color: #4BD865;\n    margin-left: -2em; }\n  .switch-ios.switch-light input:checked ~ span {\n    border-color: #4BD865;\n    box-shadow: inset 0 0 0 30px #4BD865; }\n  .switch-ios.switch-light input:checked ~ span span:first-of-type {\n    opacity: 0; }\n  .switch-ios.switch-light input:checked ~ span span:last-of-type {\n    opacity: 1;\n    color: #fff; }\n  .switch-ios.switch-toggle {\n    background-color: #D8D9DB;\n    border-radius: 30px;\n    box-shadow: inset rgba(0, 0, 0, 0.1) 0 1px 0; }\n    .switch-ios.switch-toggle a {\n      background-color: #4BD865;\n      border: 0.125em solid #D8D9DB;\n      border-radius: 1.75em;\n      -webkit-transition: all 0.12s ease-out;\n      -moz-transition: all 0.12s ease-out;\n      transition: all 0.12s ease-out; }\n    .switch-ios.switch-toggle label {\n      height: 2.4em;\n      color: #888b92;\n      line-height: 2.4em;\n      vertical-align: middle; }\n  .switch-ios input:checked + label {\n    color: #3e4043; }\n  /* Holo Theme\n */\n  .switch-toggle.switch-holo, .switch-light.switch-holo > span {\n    background-color: #464747;\n    border-radius: 1px;\n    box-shadow: inset rgba(0, 0, 0, 0.1) 0 1px 0;\n    color: #fff;\n    text-transform: uppercase; }\n  .switch-holo label {\n    color: #fff; }\n  .switch-holo > span span {\n    opacity: 0;\n    -webkit-transition: all 0.1s;\n    -moz-transition: all 0.1s;\n    transition: all 0.1s; }\n    .switch-holo > span span:first-of-type {\n      opacity: 1; }\n  .switch-holo > span span, .switch-holo label {\n    font-size: 85%;\n    line-height: 2.15625em; }\n  .switch-holo a {\n    background-color: #666;\n    border-radius: 1px;\n    box-shadow: inset rgba(255, 255, 255, 0.2) 0 1px 0, inset rgba(0, 0, 0, 0.3) 0 -1px 0; }\n  /* Selected ON switch-light\n*/\n  .switch-holo.switch-light input:checked ~ span a {\n    background-color: #0E88B1; }\n  .switch-holo.switch-light input:checked ~ span span:first-of-type {\n    opacity: 0; }\n  .switch-holo.switch-light input:checked ~ span span:last-of-type {\n    opacity: 1; }\n  /* Material Theme\n */\n  /* switch-light\n */\n  .switch-light.switch-material a {\n    top: -0.1875em;\n    width: 1.75em;\n    height: 1.75em;\n    border-radius: 50%;\n    background: #fafafa;\n    box-shadow: 0 0.125em 0.125em 0 rgba(0, 0, 0, 0.14), 0 0.1875em 0.125em -0.125em rgba(0, 0, 0, 0.2), 0 0.125em 0.25em 0 rgba(0, 0, 0, 0.12);\n    -webkit-transition: right .28s cubic-bezier(.4, 0, .2, 1);\n    -moz-transition: right .28s cubic-bezier(.4, 0, .2, 1);\n    transition: right .28s cubic-bezier(.4, 0, .2, 1); }\n  .switch-material.switch-light {\n    overflow: visible; }\n    .switch-material.switch-light::after {\n      clear: both;\n      content: \"\";\n      display: table; }\n  .switch-material.switch-light > span {\n    overflow: visible;\n    position: relative;\n    top: 0.1875em;\n    width: 3.25em;\n    height: 1.5em;\n    min-height: auto;\n    border-radius: 1em;\n    background: rgba(0, 0, 0, 0.26); }\n  .switch-material.switch-light span span {\n    position: absolute;\n    clip: rect(0 0 0 0); }\n  .switch-material.switch-light input:checked ~ span a {\n    right: 0;\n    background: #3f51b5;\n    box-shadow: 0 0.1875em 0.25em 0 rgba(0, 0, 0, 0.14), 0 0.1875em 0.1875em -0.125em rgba(0, 0, 0, 0.2), 0 0.0625em 0.375em 0 rgba(0, 0, 0, 0.12); }\n  .switch-material.switch-light input:checked ~ span {\n    background: rgba(63, 81, 181, 0.5); }\n  /* switch-toggle\n */\n  .switch-toggle.switch-material {\n    overflow: visible; }\n    .switch-toggle.switch-material::after {\n      clear: both;\n      content: \"\";\n      display: table; }\n  .switch-toggle.switch-material a {\n    top: 48%;\n    width: 0.375em !important;\n    height: 0.375em;\n    margin-left: 0.25em;\n    background: #3f51b5;\n    border-radius: 100%;\n    -webkit-transform: translateY(-50%);\n    -moz-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n    -o-transform: translateY(-50%);\n    transform: translateY(-50%);\n    -webkit-transition: -webkit-transform 0.4s ease-in;\n    -moz-transition: -moz-transform 0.4s ease-in;\n    transition: transform 0.4s ease-in; }\n  .switch-toggle.switch-material label {\n    color: rgba(0, 0, 0, 0.54);\n    font-size: 1em; }\n  .switch-toggle.switch-material label:before {\n    content: '';\n    position: absolute;\n    top: 48%;\n    left: 0;\n    display: block;\n    width: 0.875em;\n    height: 0.875em;\n    border-radius: 100%;\n    border: 0.125em solid rgba(0, 0, 0, 0.54);\n    -webkit-transform: translateY(-50%);\n    -moz-transform: translateY(-50%);\n    -ms-transform: translateY(-50%);\n    -o-transform: translateY(-50%);\n    transform: translateY(-50%); }\n  .switch-toggle.switch-material input:checked + label:before {\n    border-color: #3f51b5; }\n  /* ripple\n */\n  .switch-light.switch-material > span:before, .switch-light.switch-material > span:after, .switch-toggle.switch-material label:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 3;\n    display: block;\n    width: 4em;\n    height: 4em;\n    border-radius: 100%;\n    background: #3f51b5;\n    opacity: .4;\n    margin-left: -1.25em;\n    margin-top: -1.25em;\n    -webkit-transform: scale(0);\n    -moz-transform: scale(0);\n    -ms-transform: scale(0);\n    -o-transform: scale(0);\n    transform: scale(0);\n    -webkit-transition: opacity .4s ease-in;\n    -moz-transition: opacity .4s ease-in;\n    transition: opacity .4s ease-in; }\n  .switch-light.switch-material > span:after {\n    left: auto;\n    right: 0;\n    margin-left: 0;\n    margin-right: -1.25em; }\n  .switch-toggle.switch-material label:after {\n    width: 3.25em;\n    height: 3.25em;\n    margin-top: -0.75em; }\n  @-webkit-keyframes materialRipple {\n    0% {\n      -webkit-transform: scale(0); }\n\n    20% {\n      -webkit-transform: scale(1); }\n\n    100% {\n      opacity: 0;\n      -webkit-transform: scale(1); } }\n\n  @-moz-keyframes materialRipple {\n    0% {\n      -moz-transform: scale(0); }\n\n    20% {\n      -moz-transform: scale(1); }\n\n    100% {\n      opacity: 0;\n      -moz-transform: scale(1); } }\n\n  @keyframes materialRipple {\n    0% {\n      -webkit-transform: scale(0);\n      -moz-transform: scale(0);\n      -ms-transform: scale(0);\n      -o-transform: scale(0);\n      transform: scale(0); }\n\n    20% {\n      -webkit-transform: scale(1);\n      -moz-transform: scale(1);\n      -ms-transform: scale(1);\n      -o-transform: scale(1);\n      transform: scale(1); }\n\n    100% {\n      opacity: 0;\n      -webkit-transform: scale(1);\n      -moz-transform: scale(1);\n      -ms-transform: scale(1);\n      -o-transform: scale(1);\n      transform: scale(1); } }\n\n  .switch-material.switch-light input:not(:checked) ~ span:after, .switch-material.switch-light input:checked ~ span:before, .switch-toggle.switch-material input:checked + label:after {\n    -webkit-animation: materialRipple .4s ease-in;\n    -moz-animation: materialRipple .4s ease-in;\n    animation: materialRipple .4s ease-in; }\n  /* trick to prevent the default checked ripple animation from showing\n * when the page loads.\n * the ripples are hidden by default, and shown only when the input is focused.\n */\n  .switch-light.switch-material.switch-light input ~ span:before, .switch-light.switch-material.switch-light input ~ span:after, .switch-material.switch-toggle input + label:after {\n    visibility: hidden; }\n  .switch-light.switch-material.switch-light input:focus:checked ~ span:before, .switch-light.switch-material.switch-light input:focus:not(:checked) ~ span:after, .switch-material.switch-toggle input:focus:checked + label:after {\n    visibility: visible; } }\n\n/* Bugfix for older Webkit, including mobile Webkit. Adapted from\n * http://css-tricks.com/webkit-sibling-bug/\n */\n@media only screen and (-webkit-max-device-pixel-ratio: 2) and (max-device-width: 80em) {\n  .switch-light, .switch-toggle {\n    -webkit-animation: webkitSiblingBugfix infinite 1s; } }\n\n@-webkit-keyframes webkitSiblingBugfix {\n  from {\n    -webkit-transform: translate3d(0, 0, 0); }\n\n  to {\n    -webkit-transform: translate3d(0, 0, 0); } }\n\n/*# sourceMappingURL=toggle-switch.css.map */\n</style>\n","<script>\n\tlet word = \"\";\n\texport let columns = 0;\n\texport let rows = 0;\n</script>\n\n<div id=\"game\">\n\t{#each {length: rows} as _, row}\n\t\t<div id=\"row{row}\" style=\"max-width: max-content;\">\n\t\t{#each {length: columns} as _, col}\n\t\t\t<div id=\"row{row}_col{col}\" class=\"tiles\"></div>\n\t\t{/each}\n\t\t</div>\n\t{/each}\n</div>\n\n<style>\n#game {\n\tdisplay: grid;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmax-width:max-content;\n\tflex: 1;\n}\n.tiles {\n\tposition: relative;\n\ttop: 50%;\n\tvertical-align: middle;\n\ttext-align:center;\n\ttransform: translateY(-50%);\n\tdisplay: inline-block;\n\tborder:thin solid #66ff00;\n\tfont-size: 14vw;\n\twidth: 12vw;\n\theight: 18vw;\n\tflex: 1;\n}\n/* if the screen is wider than high */\n@media screen and (min-width: 100vh) {\n\t.tiles {\n\t\tposition: relative;\n\t\ttop: 50%;\n\t\tvertical-align: middle;\n\t\ttext-align:center;\n\t\ttransform: translateY(-50%);\n\t\tdisplay: inline-block;\n\t\tborder:thin solid #66ff00;\n\t\tfont-size: 8vh;\n\t\twidth: 8vh;\n\t\theight: 10vh;\n\t\tflex: 1;\n\t}\n}\n</style>\n","<script>\n    export let column = 0;\n    export let row = 0;\n    export let colCount;\n    export let rowCount;\n    export let word = \"\";\n    export let updatestats = (is_win, rown) => {};\n    // User clicks on the keys in the keyboard image\n    function kbclick(val) {\n      val = val.target.id\n      magic(val.toLowerCase());\n    }\n    // User uses their actual keyboard\n    function handleKeydown(event) {\n      magic(event.key.toLowerCase())\n    }\n    function magic(letter){\n      if (letter === \"enter\"){\n        if (column != colCount){\n          return;\n        }\n        let num = 0;\n        let guessed = \"\";\n        for (num = 0; num < colCount; num++){\n          let guess = document.getElementById('row'+row+'_col'+num)\n          let x = word.charAt(num)\n          if (word.includes(guess.innerText.toLowerCase())){\n            guess.style.color = \"red\"\n            document.getElementById(guess.innerText.toLowerCase()).style.backgroundColor=\"yellow\"\n          }else{\n            document.getElementById(guess.innerText.toLowerCase()).style.backgroundColor=\"grey\"\n          }\n          if (guess.innerText.toLowerCase() === x) {\n            // TODO - Want to make this look better\n            guess.style.color = \"green\"\n            guess.style.backgroundColor=\"blue\"\n            document.getElementById(guess.innerText.toLowerCase()).style.backgroundColor=\"green\"\n          }\n          guessed += guess.innerText.toLowerCase()\n        }\n        if (guessed == word){\n          updatestats(true, row+1)\n        }else{\n          if (row < rowCount-1){\n            row++\n            column = 0\n          }else{\n            updatestats(false, row+1)\n          }\n        }\n      }\n      if (letter === \"delete\" || letter === \"backspace\"){\n        if (column > 0){\n          column--\n        }\n        let rc = document.getElementById('row'+row+'_col'+column)\n        rc.textContent=\" \"\n      }\n      // ASCII Letters\n      // 65 -90\n      // 97 -122\n      let x = letter.charCodeAt(0)\n      if ((letter.length == 1) && (column < colCount) && ((x >=65 && x <= 90)||(x>=97 && x<=122))){\n        let rc = document.getElementById('row'+row+'_col'+column)\n        rc.textContent=letter.toUpperCase()\n        column= column+1\n      }\n    }\n</script>\n<svelte:window on:keydown={handleKeydown}/>\n<div id=\"keyboard\">\n\t<div id=\"topRow\" class=\"row\">\n\t\t<div on:click|self|trusted={kbclick} id=\"q\" class=\"kb\" >q</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"w\" class=\"kb\" >w</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"e\" class=\"kb\" >e</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"r\" class=\"kb\" >r</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"t\" class=\"kb\" >t</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"y\" class=\"kb\" >y</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"u\" class=\"kb\" >u</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"i\" class=\"kb\" >i</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"o\" class=\"kb\" >o</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"p\" class=\"kb\" >p</div>\n\t</div>\n\t<div id=\"dRow\" class=\"row\">\n\t\t<div on:click|self|trusted={kbclick} id=\"a\" class=\"kb\" >a</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"s\" class=\"kb\" >s</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"d\" class=\"kb\" >d</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"f\" class=\"kb\" >f</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"g\" class=\"kb\" >g</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"h\" class=\"kb\" >h</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"j\" class=\"kb\" >j</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"k\" class=\"kb\" >k</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"l\" class=\"kb\" >l</div>\n\t</div>\n\t<div id=\"tRow\" class=\"row\">\n\t\t<div on:click|self|trusted={kbclick} id=\"delete\" class=\"kb\" >Delete</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"z\" class=\"kb\" >z</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"x\" class=\"kb\" >x</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"c\" class=\"kb\" >c</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"v\" class=\"kb\" >v</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"b\" class=\"kb\" >b</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"n\" class=\"kb\" >n</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"m\" class=\"kb\" >m</div>\n\t\t<div on:click|self|trusted={kbclick} id=\"enter\" class=\"kb\" >Enter</div>\n\t</div>\n</div>\n\n<style>\n.kb {\n\tdisplay: inline-block;\n\tpadding: 0.3em;\n\tborder:thin solid #66ff00;\n\tfont-size: 4vw;\n\tflex: 1;\n}\n#keyboard {\n\tpadding-top: 1em;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmax-width: max-content;\n\tflex: 1;\n}\n@media screen and (min-width: 100vh) {\n\t.kb {\n\t\tdisplay: inline-block;\n\t\tpadding: 0.3em;\n\t\tborder:thin solid #66ff00;\n\t\tfont-size: 4vh;\n\t\tflex: 1;\n\t}\n}\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script>\n\timport { onMount } from 'svelte';\n\timport Difficulty from './Difficulty.svelte';\n\timport Board from './GameBoard.svelte';\n\timport Keyboard from './Keyboard.svelte';\n\timport Modal,{ getModal } from './Modal.svelte';\n\texport let difficulty;\n\texport let rowCount;\n\tlet wordlist = [];\n\texport let word = \"\";\n\texport let is_win = false;\n\n\t// local storage\n\timport { writable } from \"svelte/store\";\n\n\t// Clear localstorage (for dev)\n\t/* localStorage.clear() */\n\tconst storedtotplayed = writable(localStorage.getItem(\"totplayed\"));\n\tlet totplayed = 0;\n\tif (localStorage[\"totplayed\"]) {\n\t\ttotplayed = localStorage.totplayed;\n\t}else{\n\t\tlocalStorage.setItem(\"totplayed\", totplayed)\n\t}\n\tstoredtotplayed.subscribe(value => {\n\t\ttotplayed = Number(value);\n\t});\n\n\tconst storedtotwon = writable(localStorage.getItem(\"totwon\"));\n\tlet totwon = 0;\n\tif (localStorage[\"totwon\"]){\n\t\ttotwon = localStorage.totwon;\n\t}else{\n\t\tlocalStorage.setItem(\"totwon\",totwon)\n\t}\n\tstoredtotwon.subscribe(value => {\n\t\ttotwon = Number(value);\n\t});\n\n\tconst storedeasyplayed = writable(localStorage.getItem(\"easyplayed\"));\n\tlet easyplayed = 0;\n\tif (localStorage[\"easyplayed\"]){\n\t\teasyplayed = localStorage.easyplayed;\n\t}else{\n\t\tlocalStorage.setItem(\"easyplayed\", easyplayed)\n\t}\n\tstoredeasyplayed.subscribe(value => {\n\t\teasyplayed = Number(value);\n\t});\n\n\tconst storedeasywon = writable(localStorage.getItem(\"easywon\"));\n\tlet easywon = 0;\n\tif (localStorage[\"easywon\"]){\n\t\teasywon = localStorage.easywon;\n\t}else{\n\t\tlocalStorage.setItem(\"easywon\", easywon)\n\t}\n\tstoredeasywon.subscribe(value => {\n\t\teasywon = Number(value);\n\t});\n\n\tconst storedmedplayed = writable(localStorage.getItem(\"medplayed\"));\n\tlet medplayed = 0;\n\tif (localStorage[\"medplayed\"]){\n\t\tmedplayed = localStorage.medplayed;\n\t}else{\n\t\tlocalStorage.setItem(\"medplayed\", medplayed)\n\t}\n\tstoredmedplayed.subscribe(value => {\n\t\tmedplayed = Number(value);\n\t});\n\n\tconst storedmedwon = writable(localStorage.getItem(\"medwon\"));\n\tlet medwon = 0;\n\tif (localStorage[\"medwon\"]){\n\t\tmedwon = localStorage.medwon;\n\t}else{\n\t\tlocalStorage.setItem(\"medwon\", medwon)\n\t}\n\tstoredmedwon.subscribe(value => {\n\t\tmedwon = Number(value);\n\t});\n\n\tconst storedhardplayed = writable(localStorage.getItem(\"hardplayed\"));\n\tlet hardplayed = 0;\n\tif (localStorage[\"hardplayed\"]){\n\t\thardplayed = localStorage.hardplayed;\n\t}else{\n\t\tlocalStorage.setItem(\"hardplayed\", hardplayed)\n\t}\n\tstoredhardplayed.subscribe(value => {\n\t\thardplayed = Number(value);\n\t});\n\n\tconst storedhardwon = writable(localStorage.getItem(\"hardwon\"));\n\tlet hardwon = 0;\n\tif (localStorage[\"hardwon\"]){\n\t\thardwon = localStorage.hardwon;\n\t}else{\n\t\tlocalStorage.setItem(\"hardwon\", hardwon)\n\t}\n\tstoredhardwon.subscribe(value => {\n\t\thardwon = Number(value);\n\t});\n\n\tconst storedeasy1 = writable(localStorage.getItem(\"easy1\"));\n\tlet easy1 = 0;\n\tif (localStorage[\"easy1\"]){\n\t\teasy1 = localStorage.easy1;\n\t}else{\n\t\tlocalStorage.setItem(\"easy1\", easy1)\n\t}\n\tstoredeasy1.subscribe(value => {\n\t\teasy1 = Number(value);\n\t});\n\n\tconst storedeasy2 = writable(localStorage.getItem(\"easy2\"));\n\tlet easy2 = 0;\n\tif (localStorage[\"easy2\"]){\n\t\teasy2 = localStorage.easy2;\n\t}else{\n\t\tlocalStorage.setItem(\"easy2\", easy2)\n\t}\n\tstoredeasy2.subscribe(value => {\n\t\teasy2 = Number(value);\n\t});\n\n\tconst storedeasy3 = writable(localStorage.getItem(\"easy3\"));\n\tlet easy3 = 0;\n\tif (localStorage[\"easy3\"]){\n\t\teasy3 = localStorage.easy3;\n\t}else{\n\t\tlocalStorage.setItem(\"easy3\", easy3)\n\t}\n\tstoredeasy3.subscribe(value => {\n\t\teasy3 = Number(value);\n\t});\n\n\tconst storedeasy4 = writable(localStorage.getItem(\"easy4\"));\n\tlet easy4 = 0;\n\tif (localStorage[\"easy4\"]){\n\t\teasy4 = localStorage.easy4;\n\t}else{\n\t\tlocalStorage.setItem(\"easy4\", easy4)\n\t}\n\tstoredeasy4.subscribe(value => {\n\t\teasy4 = Number(value);\n\t});\n\n\tconst storedeasy5 = writable(localStorage.getItem(\"easy5\"));\n\tlet easy5 = 0;\n\tif (localStorage[\"easy5\"]){\n\t\teasy5 = localStorage.easy5;\n\t}else{\n\t\tlocalStorage.setItem(\"easy5\", easy5)\n\t}\n\tstoredeasy5.subscribe(value => {\n\t\teasy5 = Number(value);\n\t});\n\n\tconst storedeasy6 = writable(localStorage.getItem(\"easy6\"));\n\tlet easy6 = 0;\n\tif (localStorage[\"easy6\"]){\n\t\teasy6 = localStorage.easy6;\n\t}else{\n\t\tlocalStorage.setItem(\"easy6\", easy6)\n\t}\n\tstoredeasy6.subscribe(value => {\n\t\teasy6 = Number(value);\n\t});\n\n\tconst storedmed1 = writable(localStorage.getItem(\"med1\"));\n\tlet med1 = 0;\n\tif (localStorage[\"med1\"]){\n\t\tmed1 = localStorage.med1;\n\t}else{\n\t\tlocalStorage.setItem(\"med1\", med1)\n\t}\n\tstoredmed1.subscribe(value => {\n\t\tmed1 = Number(value);\n\t});\n\n\tconst storedmed2 = writable(localStorage.getItem(\"med2\"));\n\tlet med2 = 0;\n\tif (localStorage[\"med2\"]){\n\t\tmed2 = localStorage.med2;\n\t}else{\n\t\tlocalStorage.setItem(\"med2\", med2)\n\t}\n\tstoredmed2.subscribe(value => {\n\t\tmed2 = Number(value);\n\t});\n\n\tconst storedmed3 = writable(localStorage.getItem(\"med3\"));\n\tlet med3 = 0;\n\tif (localStorage[\"med3\"]){\n\t\tmed3 = localStorage.med3;\n\t}else{\n\t\tlocalStorage.setItem(\"med3\", med3)\n\t}\n\tstoredmed3.subscribe(value => {\n\t\tmed3 = Number(value);\n\t});\n\n\tconst storedmed4 = writable(localStorage.getItem(\"med4\"));\n\tlet med4 = 0;\n\tif (localStorage[\"med4\"]){\n\t\tmed4 = localStorage.med4;\n\t}else{\n\t\tlocalStorage.setItem(\"med4\", med4)\n\t}\n\tstoredmed4.subscribe(value => {\n\t\tmed4 = Number(value);\n\t});\n\n\tconst storedmed5 = writable(localStorage.getItem(\"med5\"));\n\tlet med5 = 0;\n\tif (localStorage[\"med5\"]){\n\t\tmed5 = localStorage.med5;\n\t}else{\n\t\tlocalStorage.setItem(\"med5\", med5)\n\t}\n\tstoredmed5.subscribe(value => {\n\t\tmed5 = Number(value);\n\t});\n\n\tconst storedmed6 = writable(localStorage.getItem(\"med6\"));\n\tlet med6 = 0;\n\tif (localStorage[\"med6\"]){\n\t\tmed6 = localStorage.med6;\n\t}else{\n\t\tlocalStorage.setItem(\"med6\", med6)\n\t}\n\tstoredmed6.subscribe(value => {\n\t\tmed6 = Number(value);\n\t});\n\n\tconst storedhard1 = writable(localStorage.getItem(\"hard1\"));\n\tlet hard1 = 0;\n\tif (localStorage[\"hard1\"]){\n\t\thard1 = localStorage.hard1;\n\t}else{\n\t\tlocalStorage.setItem(\"hard1\", hard1)\n\t}\n\tstoredhard1.subscribe(value => {\n\t\thard1 = Number(value);\n\t});\n\n\tconst storedhard2 = writable(localStorage.getItem(\"hard2\"));\n\tlet hard2 = 0;\n\tif (localStorage[\"hard2\"]){\n\t\thard2 = localStorage.hard2;\n\t}else{\n\t\tlocalStorage.setItem(\"hard2\", hard2)\n\t}\n\tstoredhard2.subscribe(value => {\n\t\thard2 = Number(value);\n\t});\n\n\tconst storedhard3 = writable(localStorage.getItem(\"hard3\"));\n\tlet hard3 = 0;\n\tif (localStorage[\"hard3\"]){\n\t\thard3 = localStorage.hard3;\n\t}else{\n\t\tlocalStorage.setItem(\"hard3\", hard3)\n\t}\n\tstoredhard3.subscribe(value => {\n\t\thard3 = Number(value);\n\t});\n\n\tconst storedhard4 = writable(localStorage.getItem(\"hard4\"));\n\tlet hard4 = 0;\n\tif (localStorage[\"hard4\"]){\n\t\thard4 = localStorage.hard4;\n\t}else{\n\t\tlocalStorage.setItem(\"hard4\", hard4)\n\t}\n\tstoredhard4.subscribe(value => {\n\t\thard4 = Number(value);\n\t});\n\n\tconst storedhard5 = writable(localStorage.getItem(\"hard5\"));\n\tlet hard5 = 0;\n\tif (localStorage[\"hard5\"]){\n\t\thard5 = localStorage.hard5;\n\t}else{\n\t\tlocalStorage.setItem(\"hard5\", hard5)\n\t}\n\tstoredhard5.subscribe(value => {\n\t\thard5 = Number(value);\n\t});\n\n\tconst storedhard6 = writable(localStorage.getItem(\"hard6\"));\n\tlet hard6 = 0;\n\tif (localStorage[\"hard6\"]){\n\t\thard6 = localStorage.hard6;\n\t}else{\n\t\tlocalStorage.setItem(\"hard6\", hard6)\n\t}\n\tstoredhard6.subscribe(value => {\n\t\thard6 = Number(value);\n\t});\n\n\t// load the next word to be guessed\n\tasync function loadWord() {\n\t\tif (wordlist.length < 1) {\n\t\t\tconst response = await fetch('http://mindfarm.nz/games/wordle/words?'+difficulty);\n\t\t\tconst json = await response.json();\n\t\t\twordlist = json.words;\n\t\t}\n\t\tword = wordlist.pop()\n\t\treturn word;\n\t}\n\n\tlet lastword = \"\"\n\tfunction launchModal(win, row){\n\t\tis_win = win? \"Win\": \"Lose\";\n\t\tlastword = word\n\t\t// Update stats\n\t\tstoredtotplayed.set(totplayed+1)\n\t\tswitch(difficulty){\n\t\t\tcase 'easy':\n\t\t\t\tstoredeasyplayed.set(easyplayed+1);\n\t\t\t\tbreak;\n\t\t\tcase 'medium':\n\t\t\t\tstoredmedplayed.set(medplayed+1);\n\t\t\t\tbreak;\n\t\t\tcase 'hard':\n\t\t\t\tstoredhardplayed.set(hardplayed+1);\n\t\t\t\tbreak;\n\t\t}\n\t\tif (win) {\n\t\t\tstoredtotwon.set(totwon+1)\n\t\t\tswitch(difficulty){\n\t\t\t\tcase 'easy':\n\t\t\t\t\tstoredeasywon.set(easywon+1);\n\t\t\t\t\tswitch(row){\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tstoredeasy1.set(easy1+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tstoredeasy2.set(easy2+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tstoredeasy3.set(easy3+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tstoredeasy4.set(easy4+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tstoredeasy5.set(easy5+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tstoredeasy6.set(easy6+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'medium':\n\t\t\t\t\tstoredmedwon.set(medwon+1);\n\t\t\t\t\tswitch(row){\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tstoredmed1.set(med1+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tstoredmed2.set(med2+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tstoredmed3.set(med3+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tstoredmed4.set(med4+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tstoredmed5.set(med5+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tstoredmed6.set(med6+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'hard':\n\t\t\t\t\tstoredhardwon.set(hardwon+1);\n\t\t\t\t\tswitch(row){\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tstoredhard1.set(hard1+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tstoredhard2.set(hard2+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tstoredhard3.set(hard3+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\tstoredhard4.set(hard4+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\tstoredhard5.set(hard5+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\tstoredhard6.set(hard6+1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tgetModal();\n\t\trebuild();\n\t}\n\tlet unique = {}\n\tfunction rebuild(){\n\t\tunique = {}\n\t}\n\n\tfunction setDifficulty(level){\n\t\t// change difficulty\n\t\tdifficulty = level;\n\t\t// reset the wordlist\n\t\twordlist = [];\n\t\t// trigger the rebuild\n\t\trebuild()\n\t}\n</script>\n\n<Difficulty howDifficult={(level) => setDifficulty(level)}/>\n{#key unique}\n\t{#await loadWord()}\n\t\tloading\n\t{:then word}\n\t\t<Board rows={rowCount} columns={word.length}/>\n\t\t<Keyboard word={word} rowCount={rowCount} colCount={word.length}\n\tupdatestats={(is_win, row) => launchModal(is_win, row)}/>\n\t{/await}\n{/key}\n\n<Modal>\n{#if is_win == \"Win\"}\nCongratulations!<br/>\n{:else}\nSorry<br/>\n{/if}\nThe word was: {lastword}<br/>\nStatistics:<br/>\nTotal Games Played: {totplayed}<br/>\nTotal Games Won: {totwon}<br/>\n{#if difficulty == 'easy'}\nEasy Games Played: {easyplayed}<br/>\nEasy Games Won: {easywon}<br/>\nRow 1: {easy1}<br/>\nRow 2: {easy2}<br/>\nRow 3: {easy3}<br/>\nRow 4: {easy4}<br/>\nRow 5: {easy5}<br/>\nRow 6: {easy6}<br/>\n{:else if difficulty == 'medium'}\nMedium Games Played: {medplayed}<br/>\nMedium Games Won: {medwon}<br/>\nRow 1: {med1}<br/>\nRow 2: {med2}<br/>\nRow 3: {med3}<br/>\nRow 4: {med4}<br/>\nRow 5: {med5}<br/>\nRow 6: {med6}<br/>\n{:else}\nHard Games Played: {hardplayed}<br/>\nHard Games Won: {hardwon}<br/>\nRow 1: {hard1}<br/>\nRow 2: {hard2}<br/>\nRow 3: {hard3}<br/>\nRow 4: {hard4}<br/>\nRow 5: {hard5}<br/>\nRow 6: {hard6}<br/>\n{/if}\n</Modal>\n","<script>\n\timport Words from './Words.svelte';\n\tlet rowCount = 6;\n\tlet difficulty = 'medium'\n\tlet word = '';\n</script>\n\n<main>\n\t<Words difficulty={difficulty} rowCount={rowCount}/>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 75vw;\n\t\tmargin: 0 auto;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\t@media screen and (min-width: 1200px) {\n\t\tdiv {\n\t\t\tfont-size: 36px;\n\t\t}\n\t}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t}\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","self","this","call","trusted","isTrusted","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","onTop","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","type","index","key","resolved","child_ctx","undefined","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","howDifficult","level","val","id","important","style","setProperty","columns","rows","column","row","colCount","rowCount","word","updatestats","is_win","rown","magic","letter","num","guessed","guess","getElementById","x","charAt","includes","innerText","toLowerCase","color","backgroundColor","textContent","charCodeAt","toUpperCase","slot_ctx","stopPropagation","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","Math","max","modals","topDiv","prevOnTop","closeCallback","visible","keyPress","ev","close","retVal","window","body","overflow","open","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","difficulty","wordlist","storedtotplayed","localStorage","getItem","totplayed","setItem","Number","storedtotwon","totwon","storedeasyplayed","easyplayed","storedeasywon","easywon","storedmedplayed","medplayed","storedmedwon","medwon","storedhardplayed","hardplayed","storedhardwon","hardwon","storedeasy1","easy1","storedeasy2","easy2","storedeasy3","easy3","storedeasy4","easy4","storedeasy5","easy5","storedeasy6","easy6","storedmed1","med1","storedmed2","med2","storedmed3","med3","storedmed4","med4","storedmed5","med5","storedmed6","med6","storedhard1","hard1","storedhard2","hard2","storedhard3","hard3","storedhard4","hard4","storedhard5","hard5","storedhard6","hard6","lastword","launchModal","win","rebuild","unique","setDifficulty","response","fetch","json","words"],"mappings":"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"}